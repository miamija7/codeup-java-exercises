
*** mySQL - USERS ***

Database Users:
- MySQL server is a multi-user system

SELECT current_user;                                            determine the user we are currently connected as
SELECT user, host FROM mysql.user;                              usernames and hosts connection
CREATE USER 'name'@'localhost/ip' IDENTIFIED BY 'password';     create a user and give password (ip = remote ip address)


Privileges:
- Creating a user is only half of the process, a user has no "privileges"
- it does not have the permission to do anything within the MySQL server

GRANT ALL ON *.* TO 'name'@'localhost';                     grant all privileges on all databases and tables to a user
GRANT SELECT ON *.* TO 'name'@'localhost';                  grant read-only privileges on all databases and tables to a user
GRANT ALL ON *.* TO 'name'@'localhost' WITH GRANT OPTION;   grant user all privileges + ability to grant other users
SHOW GRANTS for 'username'@'hostname';                      find out the current privileges of a user
DROP USER 'sally'@'localhost';                              removing a user (Be extremely careful with this command!)


// more privilege assignment examples
GRANT SELECT, INSERT, UPDATE, DELETE ON sally_db.sallys_table TO 'sally'@'localhost';
GRANT CREATE, ALTER, INSERT, DROP ON office_db.* TO 'office_user'@'localhost';







===================== EXERCISE =====================
mySQL

> SELECT current_user;
    +----------------+
    | current_user   |
    +----------------+
    | root@localhost |
    +----------------+
    1 row in set (0.02 sec)

    // NOTE: localhost is 127.0.0.1


> SELECT user, host FROM mysql.user;
    +------------------+-----------+
    | user             | host      |
    +------------------+-----------+
    | mysql.infoschema | localhost |
    | mysql.session    | localhost |
    | mysql.sys        | localhost |
    | root             | localhost |
    +------------------+-----------+
    4 rows in set (0.03 sec)

> SHOW GRANTS for 'root'@'hostname';
> SHOW GRANTS for 'root'@'hostname'\G
> CREATE USER 'chicken'@'localhost' IDENTIFIED BY 'P@$$w0rd';
> SELECT user, host FROM mysql.user;
> DROP USER 'chicken'@'localhost';
> CREATE USER 'miaevans'@'localhost' IDENTIFIED BY 'pwd';
> GRANT ALL ON *.* TO 'miaevans'@'localhost' WITH GRANT OPTION;
>


/////// EXTRAS ////////
SELECT user, host, authentication_string, plugin FROM mysql.user;
SELECT PASSWORD('chicken');                             no bueno
SHOW VARIABLES LIKE 'version%';                         get version of mysql
SELECT user, host, plugin FROM mysql.user;              get creds plugin
SHOW VARIABLES LIKE 'plugin_dir';                       know where your MySQL plugin directory is
select * from information_schema.user_privileges;
show status;

Terminal
STEP: get sha256 hashes output to sha256_hashes
mysql -u root -p  -e "show status" | grep Connections;
mysql -Ns -u root -p -e "SELECT CONCAT('\$mysql',LEFT(authentication_string,6),'*',INSERT(HEX(SUBSTR(authentication_string,8)),41,0,'*')) AS hash FROM mysql.user WHERE plugin = 'caching_sha2_password' AND authentication_string NOT LIKE '%INVALIDSALTANDPASSWORD%' AND authentication_string !='';" > sha256_hashes
echo -n 'codeup' | openssl dgst -sha256

STEP: try changing the default auth plugin
find /usr/local/Cellar/mysql/ -name my.cnf                          /usr/local/Cellar/mysql//8.0.29_1/.bottle/etc/my.cnf
add entry: default-authentication-plugin=mysql_native_password

STEP: change individual method mysql_native_password
ALTER USER 'miaevans'@'localhost' IDENTIFIED WITH mysql_native_password BY '<pwd>';
mysql -Ns -u root -p -e "SELECT SUBSTR(authentication_string,2) AS hash FROM mysql.user WHERE plugin = 'mysql_native_password' AND authentication_string NOT LIKE '%THISISNOTAVALIDPASSWORD%' AND authentication_string !='';" > sha1_hashes

STEP: using hashcat
sudo apt -y install make gcc
git clone https://github.com/hashcat/hashcat.git
cd hashcat
make
sudo make install
hashcat -m 300 -a 0 -D 2 -O -w 3 ./sha1_hashes ./rockyou.txt

STEP: remove hashcat
sudo rm hashcat
sudo make uninstall

STEP: restore caching_sha2_password settings
ALTER USER 'miaevans'@'localhost' IDENTIFIED BY 'pwd';



NOTE:
caching_sha2_password salts hashes, making it difficult to crack MySQL 8.0 passwords


